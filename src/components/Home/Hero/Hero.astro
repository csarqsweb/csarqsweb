---
import { Image } from "astro:assets";
import { onAfterUpdate } from 'astro:afterUpdate';
import heroImage from '../../../assets/images/home/bg-hero.jpg'
---

<div class="hero">

  <!-- <Image
    class="img"
    src={heroImage}
    width={heroImage.width / 2}
    densities={[1.5, 2]}
    alt="Somos un estudio de arquitectura."
    loading="eager" quality="100"/> -->


    <video id="hero-video" data-scroll-speed="6" class="video" width="600" autoplay loop muted playsinline>
      <source src="https://res.cloudinary.com/dacqh0npj/video/upload/v1726099415/csarq/4457865-uhd_3840_2160_24fps_dgmaud.mp4" type="video/mp4">
      <source src="https://res.cloudinary.com/dacqh0npj/video/upload/v1726099282/csarq/4457865-uhd_3840_2160_24fps_1_tnox5n.webm" type="video/webm">
      <source src="https://res.cloudinary.com/dacqh0npj/video/upload/v1726099070/csarq/4457865-uhd_3840_2160_24fps_pt2tok.ogg" type="video/ogg">

      Tu navegador no soporta el elemento de video.
    </video>

  <div class="row">
    <h1>
      <span>Somos un <b>estudio de arquitectura</b></span>
      — que transforma ideas en espacio.
    </h1>

  </div>

  <div class="hero_scroll">

    <a href="#proposal" class="lkn_scroll" title="Ir a Propuesta" aria-label="Ir a Propuesta">
      <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0h24v24H0z" fill="none"></path>
        <path d="M11.9997 13.1716L7.04996 8.22186L5.63574 9.63607L11.9997 16L18.3637 9.63607L16.9495 8.22186L11.9997 13.1716Z" fill="white">
        </path>
      </svg>
    </a>

  </div>

</div>

<style>

  .hero_scroll{
    position: absolute;
    bottom: 50px;
  }
  .lkn_scroll {
    animation: scroll-down 2s infinite;
    width: 50px;
    display: block;

  }


/* Animate scroll icon */
@keyframes scroll-down {
  0%, 100% {
    transform: translateY(0rem);
    opacity: 1;
  }

  35% {
    transform: translateY(1rem);
    opacity: 0;
  }

  70% {
    transform: translateY(-1rem);
    opacity: 0;
  }
}
  .video{
    width: 100%;

    height: 140%;
    object-fit: cover;
    opacity: 0;
    position: fixed;
    z-index: -2;
    transition: opacity .4s ease-out;

    &.loaded{
      opacity: 1;
    }
  }
  .hero:after {
    content: '';
    width: 100%;
    position: absolute;
    bottom: 0;
    height: 1px;
    box-shadow: 0 -3px 10px rgba(0, 0, 0, 1);
}
  .hero:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #00000061;
}
  .hero{
    position: relative;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
  }
  .img{
    object-fit: cover;
    height: 100%;
    width: 100%;
  }

  .row{
    width: 100%;
    padding: 0 20px;
    position: absolute;
    z-index: 2;
    box-sizing: border-box;
  }
  h1{
    margin: 0;

    font-weight: 200;
    font-size: 28px;
    max-width: 290px;
    b {
      font-weight: 300;
    }
    span{
      display: block;
      margin-bottom: 10px;
    }
  }

  @media screen and (min-width: 768px) {

    video{
      height: 100%;
    }
    h1{
      padding: 0 ;
      font-size: 66px;
      max-width: inherit;

    span{
      margin-bottom: 0;
    }
  }


}
</style>


<script is:inline data-astro-rerun>
  document.addEventListener('astro:page-load', () => {

    // Lógica del video (siempre debe ejecutarse)
    const video = document.getElementById('hero-video');
    if (video) {
      video.classList.add('loaded');
      video.currentTime = 0;  // Reiniciar el video si es necesario
      video.play();
    }

    // Verificar si el script de parallax ya fue ejecutado
    if (window.isMoveItInitialized) return;

    // Obtener el alto del viewport
    var viewportHeight = window.innerHeight;
    var viewportWidth = window.innerWidth;

    // Asignar el alto del viewport a la sección con la clase .hero si el ancho es menor a 760px
    var homeSection = document.querySelector(".hero");
    if (homeSection && viewportWidth < 760) {
      homeSection.style.height = viewportHeight + "px";
    }


    function moveIt() {
      var windowElement = window;
      var instances = [];

      document
        .querySelectorAll("[data-scroll-speed]")
        .forEach(function (element) {
          instances.push(new MoveItItem(element));
        });

      windowElement.onscroll = function () {
        var scrollTop =
          windowElement.scrollY || document.documentElement.scrollTop;
        instances.forEach(function (inst) {
          inst.update(scrollTop);
        });
      };
    }

    var MoveItItem = function (element) {
      this.element = element;
      this.speed = parseInt(this.element.getAttribute("data-scroll-speed"));
    };

    MoveItItem.prototype.update = function (scrollTop) {
      var pos = scrollTop / this.speed;
      this.element.style.transform = "translateY(" + -pos + "px)";
    };

    moveIt();

    // Marcar que el script de parallax ha sido ejecutado
    window.isMoveItInitialized = true;
  });
</script>


